{"ast":null,"code":"var _jsxFileName = \"/Users/sergo/Work/lm-astronomy/src/front/src/pages/StarMapPage/StarMapPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport d3Celestial from 'd3-celestial';\nimport { useNavigate } from 'react-router-dom';\nimport './StarMapPage.css';\nimport celestialConfig from './celestialConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StarMap() {\n  _s();\n  const navigate = useNavigate();\n  const [circleWidth, setCircleWidth] = useState(30);\n  const mapRef = useRef(null);\n  const celestialRef = useRef(null);\n  const [cursorCoords, setCursorCoords] = useState([0, 0]);\n  const [selectedCoords, setSelectedCoords] = useState([0, 0]);\n  const handleBackClick = () => {\n    navigate(`/?coords=ra:${Math.round(selectedCoords[0] * 100) / 100},dec:${Math.round(selectedCoords[1] * 100) / 100},ang:${Math.round(circleWidth * 100) / 100}°`);\n  };\n  const handleCircleWidthChange = e => {\n    const value = e.target.value;\n    setCircleWidth(Math.pow(10, value));\n  };\n  const handleTextInputChange = e => {\n    const value = parseFloat(e.target.value);\n    if (!isNaN(value)) {\n      setCircleWidth(value);\n    }\n  };\n  const sliderValue = Math.log10(circleWidth);\n  useEffect(() => {\n    celestialRef.current = d3Celestial.Celestial();\n    celestialRef.current.display(celestialConfig);\n  }, []);\n  useEffect(() => {\n    const lineStyle = {\n      stroke: \"rgba(100, 255, 100, 0.3)\",\n      fill: \"rgba(100, 255, 100, 0.5)\",\n      width: circleWidth * 4.3\n    };\n    const handleMouseMove = function (e) {\n      const x = e.offsetX;\n      const y = e.offsetY;\n      const inv = celestialRef.current.mapProjection.invert([x, y]);\n      if (inv !== undefined && !isNaN(inv[0])) {\n        setCursorCoords(inv);\n      }\n    };\n    const handleDblClick = function (e) {\n      const x = e.offsetX;\n      const y = e.offsetY;\n      const inv = celestialRef.current.mapProjection.invert([x, y]);\n      if (inv !== undefined && !isNaN(inv[0])) {\n        setSelectedCoords(inv);\n      }\n    };\n    const drawCircle = () => {\n      const jsonCircle = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [{\n          \"type\": \"Feature\",\n          \"id\": \"\",\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": selectedCoords\n          }\n        }]\n      };\n      const handleCircleWidthChange = e => {\n        const value = e.target.value;\n        setCircleWidth(Math.pow(10, value));\n      };\n      const handleTextInputChange = e => {\n        const value = parseFloat(e.target.value);\n        if (!isNaN(value)) {\n          setCircleWidth(value);\n        }\n      };\n      const sliderValue = Math.log10(circleWidth);\n      celestialRef.current.container.selectAll(\".circle\").remove();\n      celestialRef.current.clear();\n      celestialRef.current.add({\n        type: \"raw\",\n        callback: () => {},\n        redraw: function () {\n          celestialRef.current.container.selectAll(\".circle\").remove();\n          const circle = celestialRef.current.getData(jsonCircle, celestialConfig.transform);\n          celestialRef.current.container.selectAll(\".circles\").data(circle.features).enter().append(\"path\").attr(\"class\", \"circle\");\n          celestialRef.current.container.selectAll(\".circle\").each(function (d) {\n            celestialRef.current.setStyle(lineStyle);\n            celestialRef.current.map(d);\n            celestialRef.current.context.fill();\n            celestialRef.current.context.stroke();\n          });\n        }\n      });\n      celestialRef.current.redraw();\n    };\n    if (mapRef.current) {\n      mapRef.current.addEventListener(\"mousemove\", handleMouseMove);\n      mapRef.current.addEventListener(\"dblclick\", handleDblClick);\n    }\n    drawCircle();\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.removeEventListener(\"mousemove\", handleMouseMove);\n        mapRef.current.removeEventListener(\"dblclick\", handleDblClick);\n      }\n    };\n  }, [circleWidth, selectedCoords]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'getCoords',\n      onClick: handleBackClick,\n      children: [\"\\u2190 \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Get\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coords_selected\",\n      children: [\"Selected Coords: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 65\n      }, this), \" RA \", selectedCoords[0].toFixed(2), \", DEC: \", selectedCoords[1].toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coords_flow\",\n      children: [\"Current Coords: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 60\n      }, this), \" RA \", cursorCoords[0].toFixed(2), \", DEC: \", cursorCoords[1].toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"angular_slider\",\n      type: \"range\",\n      min: \"0\",\n      max: \"2.255\",\n      step: \"0.001\",\n      value: sliderValue,\n      onChange: handleCircleWidthChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"angular\",\n      children: [\"Angular size: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"angular_input\",\n        type: \"text\",\n        value: circleWidth,\n        onChange: handleTextInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 55\n      }, this), \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: \" Double click on map to selecting coordinates.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflow: 'hidden',\n        margin: '0 auto',\n        width: '800px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"celestial-map\",\n        ref: mapRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"celestial-form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n_s(StarMap, \"8yh4xpsR9igFwXscJmVAQa7jxsc=\", false, function () {\n  return [useNavigate];\n});\n_c = StarMap;\nexport default StarMap;\nvar _c;\n$RefreshReg$(_c, \"StarMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3Celestial","useNavigate","celestialConfig","jsxDEV","_jsxDEV","StarMap","_s","navigate","circleWidth","setCircleWidth","mapRef","celestialRef","cursorCoords","setCursorCoords","selectedCoords","setSelectedCoords","handleBackClick","Math","round","handleCircleWidthChange","e","value","target","pow","handleTextInputChange","parseFloat","isNaN","sliderValue","log10","current","Celestial","display","lineStyle","stroke","fill","width","handleMouseMove","x","offsetX","y","offsetY","inv","mapProjection","invert","undefined","handleDblClick","drawCircle","jsonCircle","container","selectAll","remove","clear","add","type","callback","redraw","circle","getData","transform","data","features","enter","append","attr","each","d","setStyle","map","context","addEventListener","removeEventListener","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","min","max","step","onChange","style","overflow","margin","id","ref","_c","$RefreshReg$"],"sources":["/Users/sergo/Work/lm-astronomy/src/front/src/pages/StarMapPage/StarMapPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport d3Celestial from 'd3-celestial';\nimport { useNavigate } from 'react-router-dom';\nimport './StarMapPage.css';\nimport celestialConfig from './celestialConfig';\n\nfunction StarMap() {\n    const navigate = useNavigate();\n    const [circleWidth, setCircleWidth] = useState(30);\n    const mapRef = useRef(null);\n    const celestialRef = useRef(null);\n    const [cursorCoords, setCursorCoords] = useState([0, 0]);\n    const [selectedCoords, setSelectedCoords] = useState([0, 0]);\n\n    const handleBackClick = () => {\n        navigate(`/?coords=ra:${Math.round(selectedCoords[0] * 100) / 100},dec:${Math.round(selectedCoords[1] * 100) / 100},ang:${Math.round(circleWidth * 100) / 100}°`);\n    };\n\n    const handleCircleWidthChange = (e) => {\n        const value = e.target.value;\n        setCircleWidth(Math.pow(10, value));\n    };\n\n    const handleTextInputChange = (e) => {\n        const value = parseFloat(e.target.value);\n        if (!isNaN(value)) {\n            setCircleWidth(value);\n        }\n    };\n\n    const sliderValue = Math.log10(circleWidth);\n\n    useEffect(() => {\n        celestialRef.current = d3Celestial.Celestial();\n        celestialRef.current.display(celestialConfig);\n    }, []);\n\n    useEffect(() => {\n        const lineStyle = {\n            stroke: \"rgba(100, 255, 100, 0.3)\",\n            fill: \"rgba(100, 255, 100, 0.5)\",\n            width: circleWidth * 4.3\n        };\n\n        const handleMouseMove = function (e) {\n            const x = e.offsetX;\n            const y = e.offsetY;\n            const inv = celestialRef.current.mapProjection.invert([x, y]);\n            if (inv !== undefined && !isNaN(inv[0])) {\n                setCursorCoords(inv);\n            }\n        };\n\n        const handleDblClick = function (e) {\n            const x = e.offsetX;\n            const y = e.offsetY;\n            const inv = celestialRef.current.mapProjection.invert([x, y]);\n            if (inv !== undefined && !isNaN(inv[0])) {\n                setSelectedCoords(inv);\n            }\n        };\n\n        const drawCircle = () => {\n            const jsonCircle = {\n                \"type\": \"FeatureCollection\",\n                \"features\": [{\n                    \"type\": \"Feature\",\n                    \"id\": \"\",\n                    \"geometry\": {\n                        \"type\": \"Point\",\n                        \"coordinates\": selectedCoords\n                    }\n                }]\n            };\n            const handleCircleWidthChange = (e) => {\n                const value = e.target.value;\n                setCircleWidth(Math.pow(10, value));\n            };\n\n            const handleTextInputChange = (e) => {\n                const value = parseFloat(e.target.value);\n                if (!isNaN(value)) {\n                    setCircleWidth(value);\n                }\n            };\n            const sliderValue = Math.log10(circleWidth);\n\n            celestialRef.current.container.selectAll(\".circle\").remove();\n            celestialRef.current.clear();\n\n            celestialRef.current.add({\n                type: \"raw\",\n                callback: () => {},\n                redraw: function () {\n                    celestialRef.current.container.selectAll(\".circle\").remove();\n\n                    const circle = celestialRef.current.getData(jsonCircle, celestialConfig.transform);\n                    celestialRef.current.container.selectAll(\".circles\")\n                        .data(circle.features)\n                        .enter().append(\"path\")\n                        .attr(\"class\", \"circle\");\n                    celestialRef.current.container.selectAll(\".circle\").each(function (d) {\n                        celestialRef.current.setStyle(lineStyle);\n                        celestialRef.current.map(d);\n                        celestialRef.current.context.fill();\n                        celestialRef.current.context.stroke();\n                    });\n                }\n            });\n            celestialRef.current.redraw();\n        };\n\n        if (mapRef.current) {\n            mapRef.current.addEventListener(\"mousemove\", handleMouseMove);\n            mapRef.current.addEventListener(\"dblclick\", handleDblClick);\n        }\n\n        drawCircle();\n\n        return () => {\n            if (mapRef.current) {\n                mapRef.current.removeEventListener(\"mousemove\", handleMouseMove);\n                mapRef.current.removeEventListener(\"dblclick\", handleDblClick);\n            }\n        };\n\n    }, [circleWidth, selectedCoords]);\n\n    return (\n        <div>\n            <button className={'getCoords'} onClick={handleBackClick}>← <span>Get</span></button>\n            <div className={\"coords_selected\"}>Selected Coords: <br/> RA {selectedCoords[0].toFixed(2)}, DEC: {selectedCoords[1].toFixed(2)}</div>\n            <div className={\"coords_flow\"}>Current Coords: <br/> RA {cursorCoords[0].toFixed(2)}, DEC: {cursorCoords[1].toFixed(2)}</div>\n            <input className={\"angular_slider\"} type=\"range\" min=\"0\" max=\"2.255\" step=\"0.001\" value={sliderValue} onChange={handleCircleWidthChange} />\n            <span className={\"angular\"}>Angular size: <input className={\"angular_input\"} type=\"text\" value={circleWidth} onChange={handleTextInputChange} />°</span>\n            <div className={\"info\"}> Double click on map to selecting coordinates.</div>\n            <div style={{ overflow: 'hidden', margin: '0 auto', width: '800px' }}>\n                <div id=\"celestial-map\" ref={mapRef}></div>\n            </div>\n            <div id=\"celestial-form\"></div>\n        </div>\n    );\n}\n\nexport default StarMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}