{"ast":null,"code":"var _jsxFileName = \"/Users/sergo/Work/lm-astronomy/src/front/src/components/MessengerType/MessengerType.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MessengerType.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessengerType(props) {\n  _s();\n  const messengers = [{\n    label: 'γ',\n    name: 'Electromagnetic Radiation'\n  }, {\n    label: 'ν',\n    name: 'Neutrinos'\n  }, {\n    label: 'G',\n    name: 'Gravitational Waves'\n  }, {\n    label: 'p',\n    name: 'Cosmic Rays'\n  }];\n  const [selectedMessenger, setSelectedMessenger] = useState(null);\n  const handleMessengerClick = name => {\n    if (selectedMessenger === name) {\n      setSelectedMessenger(null);\n      props.onMessengerChange(null); // передаем значение в родительский компонент\n    } else {\n      setSelectedMessenger(name);\n      props.onMessengerChange(name); // передаем значение в родительский компонент\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messengerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `messengersLabel`,\n      children: \" Messenger Type: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), messengers.map(messenger => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `messengerButton ${selectedMessenger === messenger.name ? 'active' : ''}`,\n      onClick: () => handleMessengerClick(messenger.name),\n      children: messenger.label\n    }, messenger.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(MessengerType, \"BiRqbcgABm+emag/NN/3xYjl/bk=\");\n_c = MessengerType;\nexport default MessengerType;\nvar _c;\n$RefreshReg$(_c, \"MessengerType\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MessengerType","props","_s","messengers","label","name","selectedMessenger","setSelectedMessenger","handleMessengerClick","onMessengerChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","messenger","onClick","_c","$RefreshReg$"],"sources":["/Users/sergo/Work/lm-astronomy/src/front/src/components/MessengerType/MessengerType.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './MessengerType.css';\n\nfunction MessengerType(props) {\n    const messengers = [\n        { label: 'γ', name: 'Electromagnetic Radiation' },\n        { label: 'ν', name: 'Neutrinos' },\n        { label: 'G', name: 'Gravitational Waves' },\n        { label: 'p', name: 'Cosmic Rays' }\n    ];\n\n    const [selectedMessenger, setSelectedMessenger] = useState(null);\n\n    const handleMessengerClick = (name) => {\n        if (selectedMessenger === name) {\n            setSelectedMessenger(null);\n            props.onMessengerChange(null); // передаем значение в родительский компонент\n        } else {\n            setSelectedMessenger(name);\n            props.onMessengerChange(name); // передаем значение в родительский компонент\n        }\n    };\n\n\n\n    return (\n        <div className=\"messengerContainer\">\n            <div className={`messengersLabel`}> Messenger Type: </div>\n            {messengers.map(messenger => (\n                <div\n                    key={messenger.name}\n                    className={`messengerButton ${selectedMessenger === messenger.name ? 'active' : ''}`}\n                    onClick={() => handleMessengerClick(messenger.name)}\n                >\n                    {messenger.label}\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default MessengerType;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1B,MAAMC,UAAU,GAAG,CACf;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE;EAA4B,CAAC,EACjD;IAAED,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAY,CAAC,EACjC;IAAED,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAsB,CAAC,EAC3C;IAAED,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAc,CAAC,CACtC;EAED,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAMW,oBAAoB,GAAIH,IAAI,IAAK;IACnC,IAAIC,iBAAiB,KAAKD,IAAI,EAAE;MAC5BE,oBAAoB,CAAC,IAAI,CAAC;MAC1BN,KAAK,CAACQ,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,MAAM;MACHF,oBAAoB,CAACF,IAAI,CAAC;MAC1BJ,KAAK,CAACQ,iBAAiB,CAACJ,IAAI,CAAC,CAAC,CAAC;IACnC;EACJ,CAAC;;EAID,oBACIN,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BZ,OAAA;MAAKW,SAAS,EAAG,iBAAiB;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACzDZ,UAAU,CAACa,GAAG,CAACC,SAAS,iBACrBlB,OAAA;MAEIW,SAAS,EAAG,mBAAkBJ,iBAAiB,KAAKW,SAAS,CAACZ,IAAI,GAAG,QAAQ,GAAG,EAAG,EAAE;MACrFa,OAAO,EAAEA,CAAA,KAAMV,oBAAoB,CAACS,SAAS,CAACZ,IAAI,CAAE;MAAAM,QAAA,EAEnDM,SAAS,CAACb;IAAK,GAJXa,SAAS,CAACZ,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKlB,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACb,EAAA,CApCQF,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAsCtB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}