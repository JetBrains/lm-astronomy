{"ast":null,"code":"import { parseAndCleanCoordinates } from '../components/parseCoordinatesUtility.js';\nexport function searchAPI(transientName, physicalPhenomena, messengerType) {\n  const baseURL = 'https://lm-astronomy.labs.jb.gg/api/search/';\n  const headers = {\n    'accept': 'application/json'\n  };\n  const coordinates = parseAndCleanCoordinates(transientName);\n  function constructURL(base, params) {\n    let coordinatesString = '';\n    if (params.ra !== null && params.dec !== null) {\n      coordinatesString = `${params.ra} ${params.dec}`;\n    }\n    if (params.transient_name) {\n      coordinatesString = `${coordinatesString} ${params.transient_name}`.trim();\n    }\n\n    // Replace the old parameters with the new format\n    delete params.ra;\n    delete params.dec;\n    delete params.transient_name;\n    params.object_name_or_coordinates = coordinatesString;\n\n    // Map through parameters and set to null if not provided\n    const filteredParams = Object.entries(params).map(([key, value]) => [key, value || null]).filter(([key, value]) => value !== null);\n\n    // Return base URL if no valid parameters are provided\n    if (!filteredParams.length) {\n      return base;\n    }\n\n    // Convert parameters to a query string and replace '+' with '%20'\n    const queryString = new URLSearchParams(filteredParams).toString().replace(/\\+/g, '%20');\n    return `${base}?${queryString}`;\n  }\n  let url = constructURL(baseURL, {\n    transient_name: coordinates.text,\n    object_type: physicalPhenomena,\n    messenger_type: messengerType,\n    radius: coordinates.ang,\n    ra: coordinates.ra,\n    dec: coordinates.dec\n  });\n  console.log(url); // Debug: Log the constructed URL.\n\n  // Make the API request\n  return fetch(url, {\n    headers\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    return response.json();\n  }).then(data => {\n    console.log(data); // Debug: Log the received data.\n    return data;\n  });\n}","map":{"version":3,"names":["parseAndCleanCoordinates","searchAPI","transientName","physicalPhenomena","messengerType","baseURL","headers","coordinates","constructURL","base","params","coordinatesString","ra","dec","transient_name","trim","object_name_or_coordinates","filteredParams","Object","entries","map","key","value","filter","length","queryString","URLSearchParams","toString","replace","url","text","object_type","messenger_type","radius","ang","console","log","fetch","then","response","ok","Error","json","data"],"sources":["/Users/sergo/Work/lm-astronomy/src/front/src/api/apiCalls.js"],"sourcesContent":["import { parseAndCleanCoordinates } from '../components/parseCoordinatesUtility.js';\n\nexport function searchAPI(transientName, physicalPhenomena, messengerType) {\n    const baseURL = 'https://lm-astronomy.labs.jb.gg/api/search/';\n    const headers = {\n        'accept': 'application/json'\n    };\n\n    const coordinates = parseAndCleanCoordinates(transientName);\n\n    function constructURL(base, params) {\n        let coordinatesString = '';\n        if (params.ra !== null && params.dec !== null) {\n            coordinatesString = `${params.ra} ${params.dec}`;\n        }\n        if (params.transient_name) {\n            coordinatesString = `${coordinatesString} ${params.transient_name}`.trim();\n        }\n\n        // Replace the old parameters with the new format\n        delete params.ra;\n        delete params.dec;\n        delete params.transient_name;\n        params.object_name_or_coordinates = coordinatesString;\n\n        // Map through parameters and set to null if not provided\n        const filteredParams = Object.entries(params)\n            .map(([key, value]) => [key, value || null])\n            .filter(([key, value]) => value !== null);\n\n        // Return base URL if no valid parameters are provided\n        if (!filteredParams.length) {\n            return base;\n        }\n\n        // Convert parameters to a query string and replace '+' with '%20'\n        const queryString = new URLSearchParams(filteredParams).toString().replace(/\\+/g, '%20');\n        return `${base}?${queryString}`;\n    }\n\n    let url = constructURL(baseURL, {\n        transient_name: coordinates.text,\n        object_type: physicalPhenomena,\n        messenger_type: messengerType,\n        radius: coordinates.ang,\n        ra: coordinates.ra,\n        dec: coordinates.dec\n    });\n\n    console.log(url);  // Debug: Log the constructed URL.\n\n    // Make the API request\n    return fetch(url, { headers })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(\"Network response was not ok\");\n            }\n            return response.json();\n        })\n        .then(data => {\n            console.log(data);  // Debug: Log the received data.\n            return data;\n        });\n}\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,0CAA0C;AAEnF,OAAO,SAASC,SAASA,CAACC,aAAa,EAAEC,iBAAiB,EAAEC,aAAa,EAAE;EACvE,MAAMC,OAAO,GAAG,6CAA6C;EAC7D,MAAMC,OAAO,GAAG;IACZ,QAAQ,EAAE;EACd,CAAC;EAED,MAAMC,WAAW,GAAGP,wBAAwB,CAACE,aAAa,CAAC;EAE3D,SAASM,YAAYA,CAACC,IAAI,EAAEC,MAAM,EAAE;IAChC,IAAIC,iBAAiB,GAAG,EAAE;IAC1B,IAAID,MAAM,CAACE,EAAE,KAAK,IAAI,IAAIF,MAAM,CAACG,GAAG,KAAK,IAAI,EAAE;MAC3CF,iBAAiB,GAAI,GAAED,MAAM,CAACE,EAAG,IAAGF,MAAM,CAACG,GAAI,EAAC;IACpD;IACA,IAAIH,MAAM,CAACI,cAAc,EAAE;MACvBH,iBAAiB,GAAI,GAAEA,iBAAkB,IAAGD,MAAM,CAACI,cAAe,EAAC,CAACC,IAAI,CAAC,CAAC;IAC9E;;IAEA;IACA,OAAOL,MAAM,CAACE,EAAE;IAChB,OAAOF,MAAM,CAACG,GAAG;IACjB,OAAOH,MAAM,CAACI,cAAc;IAC5BJ,MAAM,CAACM,0BAA0B,GAAGL,iBAAiB;;IAErD;IACA,MAAMM,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACT,MAAM,CAAC,CACxCU,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK,CAACD,GAAG,EAAEC,KAAK,IAAI,IAAI,CAAC,CAAC,CAC3CC,MAAM,CAAC,CAAC,CAACF,GAAG,EAAEC,KAAK,CAAC,KAAKA,KAAK,KAAK,IAAI,CAAC;;IAE7C;IACA,IAAI,CAACL,cAAc,CAACO,MAAM,EAAE;MACxB,OAAOf,IAAI;IACf;;IAEA;IACA,MAAMgB,WAAW,GAAG,IAAIC,eAAe,CAACT,cAAc,CAAC,CAACU,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;IACxF,OAAQ,GAAEnB,IAAK,IAAGgB,WAAY,EAAC;EACnC;EAEA,IAAII,GAAG,GAAGrB,YAAY,CAACH,OAAO,EAAE;IAC5BS,cAAc,EAAEP,WAAW,CAACuB,IAAI;IAChCC,WAAW,EAAE5B,iBAAiB;IAC9B6B,cAAc,EAAE5B,aAAa;IAC7B6B,MAAM,EAAE1B,WAAW,CAAC2B,GAAG;IACvBtB,EAAE,EAAEL,WAAW,CAACK,EAAE;IAClBC,GAAG,EAAEN,WAAW,CAACM;EACrB,CAAC,CAAC;EAEFsB,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC,CAAC,CAAE;;EAEnB;EACA,OAAOQ,KAAK,CAACR,GAAG,EAAE;IAAEvB;EAAQ,CAAC,CAAC,CACzBgC,IAAI,CAACC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;IACVR,OAAO,CAACC,GAAG,CAACO,IAAI,CAAC,CAAC,CAAE;IACpB,OAAOA,IAAI;EACf,CAAC,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}