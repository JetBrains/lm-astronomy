{"ast":null,"code":"import { parseAndCleanCoordinates } from '../components/parseCoordinatesUtility.js';\nexport function searchAPI(transientName, physicalPhenomena, messengerType) {\n  // Base URL for the search API. TODO: Consider moving to an environment variable.\n  const baseURL = 'https://lm-astronomy.labs.jb.gg/api/search/';\n\n  // Headers for the request.\n  const headers = {\n    'accept': 'application/json'\n  };\n  const coordinates = parseAndCleanCoordinates(transientName);\n  let coordinatesString = '';\n  if (params.ra !== null && params.dec !== null) {\n    coordinatesString = `${params.ra} ${params.dec}`;\n  }\n  if (params.transient_name) {\n    coordinatesString = `${coordinatesString} ${params.transient_name}`.trim();\n  }\n\n  // Convert empty inputs to null and construct the URL.\n  function constructURL(base, params) {\n    // Map through parameters and set to null if not provided.\n    const filteredParams = Object.entries(params).map(([key, value]) => [key, value || null]).filter(([key, value]) => value !== null);\n\n    // Return base URL if no valid parameters are provided.\n    if (!filteredParams.length) {\n      return base;\n    }\n\n    // Convert parameters to a query string and replace '+' with '%20'.\n    const queryString = new URLSearchParams(filteredParams).toString().replace(/\\+/g, '%20');\n    return `${base}?${queryString}`;\n  }\n\n  // Construct the URL with the provided parameters.\n  let url = constructURL(baseURL, {\n    transient_name: coordinates.text,\n    object_type: physicalPhenomena,\n    messenger_type: messengerType,\n    radius: coordinates.ang,\n    ra: coordinates.ra,\n    dec: coordinates.dec\n  });\n  console.log(url); // Debug: Log the constructed URL.\n\n  // Make the API request.\n  return fetch(url, {\n    headers\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    return response.json();\n  }).then(data => {\n    console.log(data); // Debug: Log the received data.\n    return data;\n  });\n}","map":{"version":3,"names":["parseAndCleanCoordinates","searchAPI","transientName","physicalPhenomena","messengerType","baseURL","headers","coordinates","coordinatesString","params","ra","dec","transient_name","trim","constructURL","base","filteredParams","Object","entries","map","key","value","filter","length","queryString","URLSearchParams","toString","replace","url","text","object_type","messenger_type","radius","ang","console","log","fetch","then","response","ok","Error","json","data"],"sources":["/Users/sergo/Work/lm-astronomy/src/front/src/api/apiCalls.js"],"sourcesContent":["import { parseAndCleanCoordinates } from '../components/parseCoordinatesUtility.js';\n\n\nexport function searchAPI(transientName, physicalPhenomena, messengerType) {\n    // Base URL for the search API. TODO: Consider moving to an environment variable.\n    const baseURL = 'https://lm-astronomy.labs.jb.gg/api/search/';\n\n    // Headers for the request.\n    const headers = {\n        'accept': 'application/json'\n    };\n\n    const coordinates = parseAndCleanCoordinates(transientName);\n    let coordinatesString = '';\n    if (params.ra !== null && params.dec !== null) {\n        coordinatesString = `${params.ra} ${params.dec}`;\n    }\n    if (params.transient_name) {\n        coordinatesString = `${coordinatesString} ${params.transient_name}`.trim();\n    }\n\n    // Convert empty inputs to null and construct the URL.\n    function constructURL(base, params) {\n        // Map through parameters and set to null if not provided.\n        const filteredParams = Object.entries(params)\n            .map(([key, value]) => [key, value || null])\n            .filter(([key, value]) => value !== null);\n\n        // Return base URL if no valid parameters are provided.\n        if (!filteredParams.length) {\n            return base;\n        }\n\n        // Convert parameters to a query string and replace '+' with '%20'.\n        const queryString = new URLSearchParams(filteredParams).toString().replace(/\\+/g, '%20');\n        return `${base}?${queryString}`;\n    }\n\n    // Construct the URL with the provided parameters.\n    let url = constructURL(baseURL, {\n        transient_name: coordinates.text,\n        object_type: physicalPhenomena,\n        messenger_type: messengerType,\n        radius: coordinates.ang,\n        ra: coordinates.ra,\n        dec: coordinates.dec\n    });\n\n\n\n    console.log(url);  // Debug: Log the constructed URL.\n\n    // Make the API request.\n    return fetch(url, { headers })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(\"Network response was not ok\");\n            }\n            return response.json();\n        })\n        .then(data => {\n            console.log(data);  // Debug: Log the received data.\n            return data;\n        });\n}\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,0CAA0C;AAGnF,OAAO,SAASC,SAASA,CAACC,aAAa,EAAEC,iBAAiB,EAAEC,aAAa,EAAE;EACvE;EACA,MAAMC,OAAO,GAAG,6CAA6C;;EAE7D;EACA,MAAMC,OAAO,GAAG;IACZ,QAAQ,EAAE;EACd,CAAC;EAED,MAAMC,WAAW,GAAGP,wBAAwB,CAACE,aAAa,CAAC;EAC3D,IAAIM,iBAAiB,GAAG,EAAE;EAC1B,IAAIC,MAAM,CAACC,EAAE,KAAK,IAAI,IAAID,MAAM,CAACE,GAAG,KAAK,IAAI,EAAE;IAC3CH,iBAAiB,GAAI,GAAEC,MAAM,CAACC,EAAG,IAAGD,MAAM,CAACE,GAAI,EAAC;EACpD;EACA,IAAIF,MAAM,CAACG,cAAc,EAAE;IACvBJ,iBAAiB,GAAI,GAAEA,iBAAkB,IAAGC,MAAM,CAACG,cAAe,EAAC,CAACC,IAAI,CAAC,CAAC;EAC9E;;EAEA;EACA,SAASC,YAAYA,CAACC,IAAI,EAAEN,MAAM,EAAE;IAChC;IACA,MAAMO,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACT,MAAM,CAAC,CACxCU,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK,CAACD,GAAG,EAAEC,KAAK,IAAI,IAAI,CAAC,CAAC,CAC3CC,MAAM,CAAC,CAAC,CAACF,GAAG,EAAEC,KAAK,CAAC,KAAKA,KAAK,KAAK,IAAI,CAAC;;IAE7C;IACA,IAAI,CAACL,cAAc,CAACO,MAAM,EAAE;MACxB,OAAOR,IAAI;IACf;;IAEA;IACA,MAAMS,WAAW,GAAG,IAAIC,eAAe,CAACT,cAAc,CAAC,CAACU,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;IACxF,OAAQ,GAAEZ,IAAK,IAAGS,WAAY,EAAC;EACnC;;EAEA;EACA,IAAII,GAAG,GAAGd,YAAY,CAACT,OAAO,EAAE;IAC5BO,cAAc,EAAEL,WAAW,CAACsB,IAAI;IAChCC,WAAW,EAAE3B,iBAAiB;IAC9B4B,cAAc,EAAE3B,aAAa;IAC7B4B,MAAM,EAAEzB,WAAW,CAAC0B,GAAG;IACvBvB,EAAE,EAAEH,WAAW,CAACG,EAAE;IAClBC,GAAG,EAAEJ,WAAW,CAACI;EACrB,CAAC,CAAC;EAIFuB,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC,CAAC,CAAE;;EAEnB;EACA,OAAOQ,KAAK,CAACR,GAAG,EAAE;IAAEtB;EAAQ,CAAC,CAAC,CACzB+B,IAAI,CAACC,QAAQ,IAAI;IACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;IACVR,OAAO,CAACC,GAAG,CAACO,IAAI,CAAC,CAAC,CAAE;IACpB,OAAOA,IAAI;EACf,CAAC,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}